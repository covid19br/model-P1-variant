#SOLUTION <- ode(y = new.POP0, times = TIME.VECTOR, func = diffEqs, parms = c(maxsteps = 1000000))
SOLUTION <- ode(y = new.POP0, times = TIME.VECTOR, func = diffEqs, parms = c())
SOLUTION <- C_calculator(SOLUTION, EXPOSURE.PERIOD.DAYS.V2, SEVERITY.FRAC.V2)
if (full_solution)
return(SOLUTION)
sol <- data.frame(time = SOLUTION[,"time"],
# C1 = c(0,diff(SOLUTION[,"POP.C11"] + SOLUTION[,"POP.C12"] + SOLUTION[,"POP.C13"])),
# C2 = c(0,diff(SOLUTION[,"POP.C21"] + SOLUTION[,"POP.C22"] + SOLUTION[,"POP.C23"])),
C1 = SOLUTION[,"POP.C11"] + SOLUTION[,"POP.C12"] + SOLUTION[,"POP.C13"],
C2 = SOLUTION[,"POP.C21"] + SOLUTION[,"POP.C22"] + SOLUTION[,"POP.C23"],
S = SOLUTION[,"POP.S1"] + SOLUTION[,"POP.S2"] + SOLUTION[,"POP.S3"],
E1 = SOLUTION[,"POP.E11"] + SOLUTION[,"POP.E12"] + SOLUTION[,"POP.E13"],
E2 = SOLUTION[,"POP.E21"] + SOLUTION[,"POP.E22"] + SOLUTION[,"POP.E23"],
A1 = SOLUTION[,"POP.A11"] + SOLUTION[,"POP.A12"] + SOLUTION[,"POP.A13"],
A2 = SOLUTION[,"POP.A21"] + SOLUTION[,"POP.A22"] + SOLUTION[,"POP.A23"],
I1 = SOLUTION[,"POP.I11"] + SOLUTION[,"POP.I12"] + SOLUTION[,"POP.I13"],
I2 = SOLUTION[,"POP.I21"] + SOLUTION[,"POP.I22"] + SOLUTION[,"POP.I23"],
H1 = SOLUTION[,"POP.H11"] + SOLUTION[,"POP.H12"] + SOLUTION[,"POP.H13"],
H2 = SOLUTION[,"POP.H21"] + SOLUTION[,"POP.H22"] + SOLUTION[,"POP.H23"],
R1 = SOLUTION[,"POP.R11"] + SOLUTION[,"POP.R12"] + SOLUTION[,"POP.R13"],
R2 = SOLUTION[,"POP.R21"] + SOLUTION[,"POP.R22"] + SOLUTION[,"POP.R23"],
D1 = SOLUTION[,"POP.D11"] + SOLUTION[,"POP.D12"] + SOLUTION[,"POP.D13"],
D2 = SOLUTION[,"POP.D21"] + SOLUTION[,"POP.D22"] + SOLUTION[,"POP.D23"])
sol$time <- d0 + (sol$time -1)
print(sum(sol[nrow(sol),c("S","E1","E2","A1","A2","I1","I2","H1","H2","R1","R2","D1","D2")]))
if(C.diff){
sol$C1 <- c(0,diff(sol$C1))
sol$C2 <- c(0,diff(sol$C2))
}
# aggregating data by the frequency time windows
freq <- rep(NA, nrow(d))
for (i in 1:nrow(d)) {
soli <- sol[sol$time >= d[i,"t_start"] & sol$time <= d[i,"t_end"],]
freq[i] <- sum(soli$C2) / sum(soli$C1, soli$C2)
}
# aggregating by epidemiological week
if(!return_compartments) {
sol <- sol %>%
mutate(week = end.of.epiweek(time, end = 0)) %>%
group_by(week) %>%
summarise(C1 = sum(C1), C2 = sum(C2)) %>%
as.data.frame()
sol.zoo <- zoo(sol[,c("C1","C2")], sol$week) } else {
sol <- sol %>%
mutate(week = end.of.epiweek(time, end = 0))
print(sol)
sol <- sol %>%
group_by(week) %>%
summarise(C1 = sum(C1), C2 = sum(C2),
S = sum(S),
E1 = sum(E1), E2 = sum(E2),
A1 = sum(A1), A2 = sum(A2),
I1 = sum(I1), I2 = sum(I2),
H1 = sum(H1), H2 = sum(H2),
R1 = sum(R1), R2 = sum(R2),
D1 = sum(D1), D2 = sum(D2)) %>%
as.data.frame()
sol.zoo <- zoo(sol[,c("C1","C2","S","E1","E2","A1","A2","I1","I2","H1","H2","R1","R2","D1","D2")], sol$week)
}
# first point is not a full week
sol.zoo <- sol.zoo[-1]
print(sum(sol.zoo[nrow(sol.zoo),c("S","E1","E2","A1","A2","I1","I2","H1","H2","R1","R2","D1","D2")]))
index(covid.zoo) <- as.Date(index(covid.zoo))
d.cases <- merge.zoo(sol.zoo, covid.zoo, all = FALSE)
return(list(cases = d.cases, freq = cbind(d, pred.freq=freq)))
}
sol <- model_solution(unlist(samples[1,]),return_compartments = T)
model_solution <- function(params, full_solution = FALSE, return_compartments = FALSE,C.diff = TRUE, ...) {
if ("prevalence" %in% names(params) | "r" %in% names(params)) {
if ("prevalence" %in% names(params))
PREVALENCE <- unlist(params["prevalence"]) / 100 * c(1,1,1)
if ("r" %in% names(params))
r <- params["r"]
# set initial conditions
init.conds <- init_condits(r, new.hosp, PREVALENCE = PREVALENCE, POP.DISTR,
CONTACT.M, EXPOSURE.PERIOD.DAYS, SICKNESS.PERIOD.DAYS,
SEVERE.PERIOD.DAYS, CONT.REDUC.FRAC, SEVERE.CONT.REDUC.FRAC,
REL.INFEC.PRESYMP, ASYMPTOMATIC.FRAC, SEVERITY.FRAC, DEATH.FRAC,
V2.FRAC = 0)
POP0 <- init.conds$POP0
# Average contact rate and success between unvaccinated susceptibles and
# infectious individuals \beta
# calculated from hospitalized cases in the last 3 weeks
BETA.RATE1 <- init.conds$BETA.RATE
names(POP0) <- paste0(rep(c("POP.S", "POP.E1", "POP.A1", "POP.I1", "POP.H1",
"POP.C1", "POP.R1", "POP.D1",
"POP.E2", "POP.A2", "POP.I2", "POP.H2",
"POP.C2", "POP.R2", "POP.D2"), each=3), rep(1:3, 15))
}
if ("IHR.V2.PROP" %in% names(params)) {
ihr2 <- ihr[,2]/100
ihr2 <- 1 / (1 + 1/(params["IHR.V2.PROP"] * ihr2/(1-ihr2)))
weighted_ihr2 <- ihr2 * age.distr
SEVERITY.FRAC.V2 = c(sum(weighted_ihr2[1:4]) / sum(age.distr[1:4]),
sum(weighted_ihr2[5:12]) / sum(age.distr[5:12]),
sum(weighted_ihr2[13:length(age.distr)]) / sum(age.distr[13:length(age.distr)]))
}
# introduce new variant in initial conditions
new.POP0 <- POP0
new.POP0[4:15] <- POP0[4:15] * (1-params["INIT.V2.FRAC"])
new.POP0[25:36] <- POP0[4:15] * params["INIT.V2.FRAC"]
print(sum(new.POP0))
diffEqs <- func.factory(REL_BETA_RATE2 = params["REL.BETA.RATE2"],
PROB_REINFEC_V2 = params["PROB.REINFEC.V2"],
BETA_RATE1 = BETA.RATE1,
SEVERITY_FRAC_V2 = SEVERITY.FRAC.V2,
...)
#SOLUTION <- ode(y = new.POP0, times = TIME.VECTOR, func = diffEqs, parms = c(maxsteps = 1000000))
SOLUTION <- ode(y = new.POP0, times = TIME.VECTOR, func = diffEqs, parms = c())
SOLUTION <- C_calculator(SOLUTION, EXPOSURE.PERIOD.DAYS.V2, SEVERITY.FRAC.V2)
if (full_solution)
return(SOLUTION)
sol <- data.frame(time = SOLUTION[,"time"],
# C1 = c(0,diff(SOLUTION[,"POP.C11"] + SOLUTION[,"POP.C12"] + SOLUTION[,"POP.C13"])),
# C2 = c(0,diff(SOLUTION[,"POP.C21"] + SOLUTION[,"POP.C22"] + SOLUTION[,"POP.C23"])),
C1 = SOLUTION[,"POP.C11"] + SOLUTION[,"POP.C12"] + SOLUTION[,"POP.C13"],
C2 = SOLUTION[,"POP.C21"] + SOLUTION[,"POP.C22"] + SOLUTION[,"POP.C23"],
S = SOLUTION[,"POP.S1"] + SOLUTION[,"POP.S2"] + SOLUTION[,"POP.S3"],
E1 = SOLUTION[,"POP.E11"] + SOLUTION[,"POP.E12"] + SOLUTION[,"POP.E13"],
E2 = SOLUTION[,"POP.E21"] + SOLUTION[,"POP.E22"] + SOLUTION[,"POP.E23"],
A1 = SOLUTION[,"POP.A11"] + SOLUTION[,"POP.A12"] + SOLUTION[,"POP.A13"],
A2 = SOLUTION[,"POP.A21"] + SOLUTION[,"POP.A22"] + SOLUTION[,"POP.A23"],
I1 = SOLUTION[,"POP.I11"] + SOLUTION[,"POP.I12"] + SOLUTION[,"POP.I13"],
I2 = SOLUTION[,"POP.I21"] + SOLUTION[,"POP.I22"] + SOLUTION[,"POP.I23"],
H1 = SOLUTION[,"POP.H11"] + SOLUTION[,"POP.H12"] + SOLUTION[,"POP.H13"],
H2 = SOLUTION[,"POP.H21"] + SOLUTION[,"POP.H22"] + SOLUTION[,"POP.H23"],
R1 = SOLUTION[,"POP.R11"] + SOLUTION[,"POP.R12"] + SOLUTION[,"POP.R13"],
R2 = SOLUTION[,"POP.R21"] + SOLUTION[,"POP.R22"] + SOLUTION[,"POP.R23"],
D1 = SOLUTION[,"POP.D11"] + SOLUTION[,"POP.D12"] + SOLUTION[,"POP.D13"],
D2 = SOLUTION[,"POP.D21"] + SOLUTION[,"POP.D22"] + SOLUTION[,"POP.D23"])
sol$time <- d0 + (sol$time -1)
print(sum(sol[nrow(sol),c("S","E1","E2","A1","A2","I1","I2","H1","H2","R1","R2","D1","D2")]))
if(C.diff){
sol$C1 <- c(0,diff(sol$C1))
sol$C2 <- c(0,diff(sol$C2))
}
# aggregating data by the frequency time windows
freq <- rep(NA, nrow(d))
for (i in 1:nrow(d)) {
soli <- sol[sol$time >= d[i,"t_start"] & sol$time <= d[i,"t_end"],]
freq[i] <- sum(soli$C2) / sum(soli$C1, soli$C2)
}
# aggregating by epidemiological week
if(!return_compartments) {
sol <- sol %>%
mutate(week = end.of.epiweek(time, end = 0)) %>%
group_by(week) %>%
summarise(C1 = sum(C1), C2 = sum(C2)) %>%
as.data.frame()
sol.zoo <- zoo(sol[,c("C1","C2")], sol$week) } else {
sol <- sol %>%
mutate(week = end.of.epiweek(time, end = 0))
print(sol)
sol <- sol %>%
group_by(week) %>%
summarise(C1 = sum(C1), C2 = sum(C2),
S = S[which.max(time)],
E1 = E1[which.max(time)], E2 = E2[which.max(time)],
A1 = A1[which.max(time)], A2 = A2[which.max(time)],
I1 = I1[which.max(time)], I2 = I2[which.max(time)],
H1 = H1[which.max(time)], H2 = H2[which.max(time)],
R1 = R1[which.max(time)], R2 = R2[which.max(time)],
D1 = D1[which.max(time)], D2 = D2[which.max(time)]) %>%
as.data.frame()
sol.zoo <- zoo(sol[,c("C1","C2","S","E1","E2","A1","A2","I1","I2","H1","H2","R1","R2","D1","D2")], sol$week)
}
# first point is not a full week
sol.zoo <- sol.zoo[-1]
print(sum(sol.zoo[nrow(sol.zoo),c("S","E1","E2","A1","A2","I1","I2","H1","H2","R1","R2","D1","D2")]))
index(covid.zoo) <- as.Date(index(covid.zoo))
d.cases <- merge.zoo(sol.zoo, covid.zoo, all = FALSE)
return(list(cases = d.cases, freq = cbind(d, pred.freq=freq)))
}
sol <- model_solution(unlist(samples[1,]),return_compartments = T)
model_solution <- function(params, full_solution = FALSE, return_compartments = FALSE,C.diff = TRUE, ...) {
if ("prevalence" %in% names(params) | "r" %in% names(params)) {
if ("prevalence" %in% names(params))
PREVALENCE <- unlist(params["prevalence"]) / 100 * c(1,1,1)
if ("r" %in% names(params))
r <- params["r"]
# set initial conditions
init.conds <- init_condits(r, new.hosp, PREVALENCE = PREVALENCE, POP.DISTR,
CONTACT.M, EXPOSURE.PERIOD.DAYS, SICKNESS.PERIOD.DAYS,
SEVERE.PERIOD.DAYS, CONT.REDUC.FRAC, SEVERE.CONT.REDUC.FRAC,
REL.INFEC.PRESYMP, ASYMPTOMATIC.FRAC, SEVERITY.FRAC, DEATH.FRAC,
V2.FRAC = 0)
POP0 <- init.conds$POP0
# Average contact rate and success between unvaccinated susceptibles and
# infectious individuals \beta
# calculated from hospitalized cases in the last 3 weeks
BETA.RATE1 <- init.conds$BETA.RATE
names(POP0) <- paste0(rep(c("POP.S", "POP.E1", "POP.A1", "POP.I1", "POP.H1",
"POP.C1", "POP.R1", "POP.D1",
"POP.E2", "POP.A2", "POP.I2", "POP.H2",
"POP.C2", "POP.R2", "POP.D2"), each=3), rep(1:3, 15))
}
if ("IHR.V2.PROP" %in% names(params)) {
ihr2 <- ihr[,2]/100
ihr2 <- 1 / (1 + 1/(params["IHR.V2.PROP"] * ihr2/(1-ihr2)))
weighted_ihr2 <- ihr2 * age.distr
SEVERITY.FRAC.V2 = c(sum(weighted_ihr2[1:4]) / sum(age.distr[1:4]),
sum(weighted_ihr2[5:12]) / sum(age.distr[5:12]),
sum(weighted_ihr2[13:length(age.distr)]) / sum(age.distr[13:length(age.distr)]))
}
# introduce new variant in initial conditions
new.POP0 <- POP0
new.POP0[4:15] <- POP0[4:15] * (1-params["INIT.V2.FRAC"])
new.POP0[25:36] <- POP0[4:15] * params["INIT.V2.FRAC"]
# print(sum(new.POP0))
diffEqs <- func.factory(REL_BETA_RATE2 = params["REL.BETA.RATE2"],
PROB_REINFEC_V2 = params["PROB.REINFEC.V2"],
BETA_RATE1 = BETA.RATE1,
SEVERITY_FRAC_V2 = SEVERITY.FRAC.V2,
...)
#SOLUTION <- ode(y = new.POP0, times = TIME.VECTOR, func = diffEqs, parms = c(maxsteps = 1000000))
SOLUTION <- ode(y = new.POP0, times = TIME.VECTOR, func = diffEqs, parms = c())
SOLUTION <- C_calculator(SOLUTION, EXPOSURE.PERIOD.DAYS.V2, SEVERITY.FRAC.V2)
if (full_solution)
return(SOLUTION)
sol <- data.frame(time = SOLUTION[,"time"],
# C1 = c(0,diff(SOLUTION[,"POP.C11"] + SOLUTION[,"POP.C12"] + SOLUTION[,"POP.C13"])),
# C2 = c(0,diff(SOLUTION[,"POP.C21"] + SOLUTION[,"POP.C22"] + SOLUTION[,"POP.C23"])),
C1 = SOLUTION[,"POP.C11"] + SOLUTION[,"POP.C12"] + SOLUTION[,"POP.C13"],
C2 = SOLUTION[,"POP.C21"] + SOLUTION[,"POP.C22"] + SOLUTION[,"POP.C23"],
S = SOLUTION[,"POP.S1"] + SOLUTION[,"POP.S2"] + SOLUTION[,"POP.S3"],
E1 = SOLUTION[,"POP.E11"] + SOLUTION[,"POP.E12"] + SOLUTION[,"POP.E13"],
E2 = SOLUTION[,"POP.E21"] + SOLUTION[,"POP.E22"] + SOLUTION[,"POP.E23"],
A1 = SOLUTION[,"POP.A11"] + SOLUTION[,"POP.A12"] + SOLUTION[,"POP.A13"],
A2 = SOLUTION[,"POP.A21"] + SOLUTION[,"POP.A22"] + SOLUTION[,"POP.A23"],
I1 = SOLUTION[,"POP.I11"] + SOLUTION[,"POP.I12"] + SOLUTION[,"POP.I13"],
I2 = SOLUTION[,"POP.I21"] + SOLUTION[,"POP.I22"] + SOLUTION[,"POP.I23"],
H1 = SOLUTION[,"POP.H11"] + SOLUTION[,"POP.H12"] + SOLUTION[,"POP.H13"],
H2 = SOLUTION[,"POP.H21"] + SOLUTION[,"POP.H22"] + SOLUTION[,"POP.H23"],
R1 = SOLUTION[,"POP.R11"] + SOLUTION[,"POP.R12"] + SOLUTION[,"POP.R13"],
R2 = SOLUTION[,"POP.R21"] + SOLUTION[,"POP.R22"] + SOLUTION[,"POP.R23"],
D1 = SOLUTION[,"POP.D11"] + SOLUTION[,"POP.D12"] + SOLUTION[,"POP.D13"],
D2 = SOLUTION[,"POP.D21"] + SOLUTION[,"POP.D22"] + SOLUTION[,"POP.D23"])
sol$time <- d0 + (sol$time -1)
print(sum(sol[nrow(sol),c("S","E1","E2","A1","A2","I1","I2","H1","H2","R1","R2","D1","D2")]))
if(C.diff){
sol$C1 <- c(0,diff(sol$C1))
sol$C2 <- c(0,diff(sol$C2))
}
# aggregating data by the frequency time windows
freq <- rep(NA, nrow(d))
for (i in 1:nrow(d)) {
soli <- sol[sol$time >= d[i,"t_start"] & sol$time <= d[i,"t_end"],]
freq[i] <- sum(soli$C2) / sum(soli$C1, soli$C2)
}
# aggregating by epidemiological week
if(!return_compartments) {
sol <- sol %>%
mutate(week = end.of.epiweek(time, end = 0)) %>%
group_by(week) %>%
summarise(C1 = sum(C1), C2 = sum(C2)) %>%
as.data.frame()
sol.zoo <- zoo(sol[,c("C1","C2")], sol$week) } else {
sol <- sol %>%
mutate(week = end.of.epiweek(time, end = 0)) %>%
group_by(week) %>%
summarise(C1 = sum(C1), C2 = sum(C2),
S = S[which.max(time)],
E1 = E1[which.max(time)], E2 = E2[which.max(time)],
A1 = A1[which.max(time)], A2 = A2[which.max(time)],
I1 = I1[which.max(time)], I2 = I2[which.max(time)],
H1 = H1[which.max(time)], H2 = H2[which.max(time)],
R1 = R1[which.max(time)], R2 = R2[which.max(time)],
D1 = D1[which.max(time)], D2 = D2[which.max(time)]) %>%
as.data.frame()
sol.zoo <- zoo(sol[,c("C1","C2","S","E1","E2","A1","A2","I1","I2","H1","H2","R1","R2","D1","D2")], sol$week)
}
# first point is not a full week
sol.zoo <- sol.zoo[-1]
# print(sum(sol.zoo[nrow(sol.zoo),c("S","E1","E2","A1","A2","I1","I2","H1","H2","R1","R2","D1","D2")]))
index(covid.zoo) <- as.Date(index(covid.zoo))
d.cases <- merge.zoo(sol.zoo, covid.zoo, all = FALSE)
return(list(cases = d.cases, freq = cbind(d, pred.freq=freq)))
}
sol <- model_solution(unlist(samples[1,]),return_compartments = T)
model_solution <- function(params, full_solution = FALSE, return_compartments = FALSE,C.diff = TRUE, ...) {
if ("prevalence" %in% names(params) | "r" %in% names(params)) {
if ("prevalence" %in% names(params))
PREVALENCE <- unlist(params["prevalence"]) / 100 * c(1,1,1)
if ("r" %in% names(params))
r <- params["r"]
# set initial conditions
init.conds <- init_condits(r, new.hosp, PREVALENCE = PREVALENCE, POP.DISTR,
CONTACT.M, EXPOSURE.PERIOD.DAYS, SICKNESS.PERIOD.DAYS,
SEVERE.PERIOD.DAYS, CONT.REDUC.FRAC, SEVERE.CONT.REDUC.FRAC,
REL.INFEC.PRESYMP, ASYMPTOMATIC.FRAC, SEVERITY.FRAC, DEATH.FRAC,
V2.FRAC = 0)
POP0 <- init.conds$POP0
# Average contact rate and success between unvaccinated susceptibles and
# infectious individuals \beta
# calculated from hospitalized cases in the last 3 weeks
BETA.RATE1 <- init.conds$BETA.RATE
names(POP0) <- paste0(rep(c("POP.S", "POP.E1", "POP.A1", "POP.I1", "POP.H1",
"POP.C1", "POP.R1", "POP.D1",
"POP.E2", "POP.A2", "POP.I2", "POP.H2",
"POP.C2", "POP.R2", "POP.D2"), each=3), rep(1:3, 15))
}
if ("IHR.V2.PROP" %in% names(params)) {
ihr2 <- ihr[,2]/100
ihr2 <- 1 / (1 + 1/(params["IHR.V2.PROP"] * ihr2/(1-ihr2)))
weighted_ihr2 <- ihr2 * age.distr
SEVERITY.FRAC.V2 = c(sum(weighted_ihr2[1:4]) / sum(age.distr[1:4]),
sum(weighted_ihr2[5:12]) / sum(age.distr[5:12]),
sum(weighted_ihr2[13:length(age.distr)]) / sum(age.distr[13:length(age.distr)]))
}
# introduce new variant in initial conditions
new.POP0 <- POP0
new.POP0[4:15] <- POP0[4:15] * (1-params["INIT.V2.FRAC"])
new.POP0[25:36] <- POP0[4:15] * params["INIT.V2.FRAC"]
# print(sum(new.POP0))
diffEqs <- func.factory(REL_BETA_RATE2 = params["REL.BETA.RATE2"],
PROB_REINFEC_V2 = params["PROB.REINFEC.V2"],
BETA_RATE1 = BETA.RATE1,
SEVERITY_FRAC_V2 = SEVERITY.FRAC.V2,
...)
#SOLUTION <- ode(y = new.POP0, times = TIME.VECTOR, func = diffEqs, parms = c(maxsteps = 1000000))
SOLUTION <- ode(y = new.POP0, times = TIME.VECTOR, func = diffEqs, parms = c())
SOLUTION <- C_calculator(SOLUTION, EXPOSURE.PERIOD.DAYS.V2, SEVERITY.FRAC.V2)
if (full_solution)
return(SOLUTION)
sol <- data.frame(time = SOLUTION[,"time"],
# C1 = c(0,diff(SOLUTION[,"POP.C11"] + SOLUTION[,"POP.C12"] + SOLUTION[,"POP.C13"])),
# C2 = c(0,diff(SOLUTION[,"POP.C21"] + SOLUTION[,"POP.C22"] + SOLUTION[,"POP.C23"])),
C1 = SOLUTION[,"POP.C11"] + SOLUTION[,"POP.C12"] + SOLUTION[,"POP.C13"],
C2 = SOLUTION[,"POP.C21"] + SOLUTION[,"POP.C22"] + SOLUTION[,"POP.C23"],
S = SOLUTION[,"POP.S1"] + SOLUTION[,"POP.S2"] + SOLUTION[,"POP.S3"],
E1 = SOLUTION[,"POP.E11"] + SOLUTION[,"POP.E12"] + SOLUTION[,"POP.E13"],
E2 = SOLUTION[,"POP.E21"] + SOLUTION[,"POP.E22"] + SOLUTION[,"POP.E23"],
A1 = SOLUTION[,"POP.A11"] + SOLUTION[,"POP.A12"] + SOLUTION[,"POP.A13"],
A2 = SOLUTION[,"POP.A21"] + SOLUTION[,"POP.A22"] + SOLUTION[,"POP.A23"],
I1 = SOLUTION[,"POP.I11"] + SOLUTION[,"POP.I12"] + SOLUTION[,"POP.I13"],
I2 = SOLUTION[,"POP.I21"] + SOLUTION[,"POP.I22"] + SOLUTION[,"POP.I23"],
H1 = SOLUTION[,"POP.H11"] + SOLUTION[,"POP.H12"] + SOLUTION[,"POP.H13"],
H2 = SOLUTION[,"POP.H21"] + SOLUTION[,"POP.H22"] + SOLUTION[,"POP.H23"],
R1 = SOLUTION[,"POP.R11"] + SOLUTION[,"POP.R12"] + SOLUTION[,"POP.R13"],
R2 = SOLUTION[,"POP.R21"] + SOLUTION[,"POP.R22"] + SOLUTION[,"POP.R23"],
D1 = SOLUTION[,"POP.D11"] + SOLUTION[,"POP.D12"] + SOLUTION[,"POP.D13"],
D2 = SOLUTION[,"POP.D21"] + SOLUTION[,"POP.D22"] + SOLUTION[,"POP.D23"])
sol$time <- d0 + (sol$time -1)
if(C.diff){
sol$C1 <- c(0,diff(sol$C1))
sol$C2 <- c(0,diff(sol$C2))
}
# aggregating data by the frequency time windows
freq <- rep(NA, nrow(d))
for (i in 1:nrow(d)) {
soli <- sol[sol$time >= d[i,"t_start"] & sol$time <= d[i,"t_end"],]
freq[i] <- sum(soli$C2) / sum(soli$C1, soli$C2)
}
# aggregating by epidemiological week
if(!return_compartments) {
sol <- sol %>%
mutate(week = end.of.epiweek(time, end = 0)) %>%
group_by(week) %>%
summarise(C1 = sum(C1), C2 = sum(C2)) %>%
as.data.frame()
sol.zoo <- zoo(sol[,c("C1","C2")], sol$week) } else {
sol <- sol %>%
mutate(week = end.of.epiweek(time, end = 0)) %>%
group_by(week) %>%
summarise(C1 = sum(C1), C2 = sum(C2),
S = S[which.max(time)],
E1 = E1[which.max(time)], E2 = E2[which.max(time)],
A1 = A1[which.max(time)], A2 = A2[which.max(time)],
I1 = I1[which.max(time)], I2 = I2[which.max(time)],
H1 = H1[which.max(time)], H2 = H2[which.max(time)],
R1 = R1[which.max(time)], R2 = R2[which.max(time)],
D1 = D1[which.max(time)], D2 = D2[which.max(time)]) %>%
as.data.frame()
sol.zoo <- zoo(sol[,c("C1","C2","S","E1","E2","A1","A2","I1","I2","H1","H2","R1","R2","D1","D2")], sol$week)
}
# first point is not a full week
sol.zoo <- sol.zoo[-1]
# print(sum(sol.zoo[nrow(sol.zoo),c("S","E1","E2","A1","A2","I1","I2","H1","H2","R1","R2","D1","D2")]))
index(covid.zoo) <- as.Date(index(covid.zoo))
d.cases <- merge.zoo(sol.zoo, covid.zoo, all = FALSE)
return(list(cases = d.cases, freq = cbind(d, pred.freq=freq)))
}
res <- solution_CI(best.fit,n=100,conv.logit = c(1,3,4))
ggplot(res$mean.vals,aes(x = time, y = mean, group = classe,fill = classe,color = classe)) + facet_wrap(~classe,scales="free_y") + geom_line() + geom_ribbon(aes(ymin = q2.5,ymax = q97.5),alpha = 0.3)+theme_bw() +theme(legend.position = "none")+scale_y_continuous(labels = scales::number_format(accuracy = 1))+labs(x ='Date',y = "Weekly Cases")
ggplot(res$mean.vals,aes(x = time, y = mean, group = classe,fill = classe,color = classe)) + facet_wrap(~classe,ncol = 3,scales="free_y") + geom_line() + geom_ribbon(aes(ymin = q2.5,ymax = q97.5),alpha = 0.3)+theme_bw() +theme(legend.position = "none")+scale_y_continuous(labels = scales::number_format(accuracy = 1))+labs(x ='Date',y = "Weekly Cases")
ggplot(res$mean.vals,aes(x = time, y = mean, group = classe,fill = classe,color = classe)) + facet_wrap(~classe,ncol = 3,scales="free_y") + geom_line() + geom_ribbon(aes(ymin = q2.5,ymax = q97.5),alpha = 0.3)+theme_bw() +theme(legend.position = "none")+scale_y_continuous(labels = scales::number_format(accuracy = 1))+labs(x ='Date',y = "Cases")
ggplot(res$mean.vals,aes(x = time, y = mean, group = classe,fill = classe,color = classe)) + facet_wrap(~classe,ncol = 3,scales="free_y") + geom_line() + geom_ribbon(aes(ymin = q2.5,ymax = q97.5),alpha = 0.3)+theme_bw() +theme(legend.position = "none",text = element_text(size=16))+scale_y_continuous(labels = scales::number_format(accuracy = 1))+labs(x ='Date',y = "Cases")
ggplot(res$mean.vals,aes(x = time, y = mean, group = classe,fill = classe,color = classe)) + facet_wrap(~classe,ncol = 3,scales="free_y") + geom_line() + geom_ribbon(aes(ymin = q2.5,ymax = q97.5),alpha = 0.3)+theme_bw() +theme(legend.position = "none",text = element_text(size=16))+scale_y_continuous(labels = scales::number_format(accuracy = 1))+labs(x ='Date',y = "Cases")+scale_color_viridis_d()+scale_fill_viridis_d()
Sys.setlocale("LC_TIME", "en_US")
ggplot(res$mean.vals,aes(x = time, y = mean, group = classe,fill = classe,color = classe)) + facet_wrap(~classe,ncol = 3,scales="free_y") + geom_line() + geom_ribbon(aes(ymin = q2.5,ymax = q97.5),alpha = 0.3)+theme_bw() +theme(legend.position = "none",text = element_text(size=16))+scale_y_continuous(labels = scales::number_format(accuracy = 1))+labs(x ='Date',y = "Cases")+scale_color_viridis_d()+scale_fill_viridis_d()
Sys.setlocale("LC_TIME", "English")
Sys.setlocale(locale="es_ES.UTF-8")
Sys.setlocale("LC_ALL","es_ES.UTF-8")
Sys.setlocale("LC_ALL","es_ES.UTF8")
Sys.setlocale("LC_ALL","EN")
Sys.setlocale("LC_ALL","English")
Sys.setlocale("LC_ALL","es_ES.UTF8")
Sys.setlocale("LC_ALL","es_ES.UTF-8")
Sys.getlocale()
Sys.setlocale("LC_TIME","es_ES.UTF-8")
?Sys.setlocale
Sys.setlocale("LC_TIME","es_US.utf8")
Sys.setlocale("LC_TIME","es_US.utf8")
Sys.setlocale("LC_TIME","en_US.utf8")
ggplot(res$mean.vals,aes(x = time, y = mean, group = classe,fill = classe,color = classe)) + facet_wrap(~classe,ncol = 3,scales="free_y") + geom_line() + geom_ribbon(aes(ymin = q2.5,ymax = q97.5),alpha = 0.3)+theme_bw() +theme(legend.position = "none",text = element_text(size=16))+scale_y_continuous(labels = scales::number_format(accuracy = 1))+labs(x ='Date',y = "Cases")+scale_color_viridis_d()+scale_fill_viridis_d()
res <- solution_CI(best.fit,n=1000,conv.logit = c(1,3,4))
ggplot(res$mean.vals,aes(x = time, y = mean, group = classe,fill = classe,color = classe)) + facet_wrap(~classe,ncol = 3,scales="free_y") + geom_line() + geom_ribbon(aes(ymin = q2.5,ymax = q97.5),alpha = 0.3)+theme_bw() +theme(legend.position = "none",text = element_text(size=16))+scale_y_continuous(labels = scales::number_format(accuracy = 1))+labs(x ='Date',y = "Cases")+scale_color_viridis_d()+scale_fill_viridis_d()
ggplot(res$mean.vals,aes(x = time, y = mean, group = classe,fill = classe,color = classe)) + facet_wrap(~classe,ncol = 3,scales="free_y") + geom_line() + geom_ribbon(aes(ymin = q2.5,ymax = q97.5),alpha = 0.3,color = NULL)+theme_bw() +theme(legend.position = "none",text = element_text(size=16))+scale_y_continuous(labels = scales::number_format(accuracy = 1))+labs(x ='Date',y = "Cases")+scale_color_viridis_d()+scale_fill_viridis_d()
ggplot(res$mean.vals,aes(x = time, y = mean, group = classe,fill = classe,color = classe)) + facet_wrap(~classe,ncol = 3,scales="free_y") + geom_line() + geom_ribbon(aes(ymin = q2.5,ymax = q97.5,color = NULL),alpha = 0.3)+theme_bw() +theme(legend.position = "none",text = element_text(size=16))+scale_y_continuous(labels = scales::number_format(accuracy = 1))+labs(x ='Date',y = "Cases")+scale_color_viridis_d()+scale_fill_viridis_d()
ggplot(res$mean.vals,aes(x = time, y = mean, group = classe,fill = classe,color = classe)) + facet_wrap(~classe,ncol = 3,scales="free_y") + geom_line() + geom_ribbon(aes(ymin = q2.5,ymax = q97.5,color = NULL),alpha = 0.3)+theme_bw() +theme(legend.position = "none",text = element_text(size=14))+scale_y_continuous(labels = scales::number_format(accuracy = 1))+labs(x ='Date',y = "Cases")+scale_color_viridis_d()+scale_fill_viridis_d()
source("~/covid/model-P1-variant/functions/ajuste_funs.R")
res
res.E2 <- res$mean.vals %>% filter(classe == "E2")
res.E2
library(ggplot2)
source("~/covid/model-P1-variant/functions/ajuste_funs.R")
source("~/covid/markov_vaccine/simple_CI_estimator.R")
ggplot(res$mean.vals,aes(x = time, y = mean, group = classe,fill = classe,color = classe)) + facet_wrap(~classe,ncol = 3,scales="free_y") + geom_line() + geom_ribbon(aes(ymin = q2.5,ymax = q97.5,color = NULL),alpha = 0.3)+theme_bw() +theme(legend.position = "none",text = element_text(size=14))+scale_y_continuous(labels = scales::number_format(accuracy = 1))+labs(x ='Date',y = "Cases")+scale_color_viridis_d()+scale_fill_viridis_d()
res2 <- res
res2$mean.vals %>% mutate(classe = factor(ifelse(var == "E1",expression(E[1]))))
res2$mean.vals %>% mutate(classe = factor(ifelse(var == "E1",expression(E[1]),var)))
res2$mean.vals %>% mutate(classe.nova = factor(ifelse(var == "E1",expression(E[1]),var)))
res2$mean.vals %>% mutate(classe.nova = factor(ifelse(classe == "E1",expression(E[1]),classe)))
res2$mean.vals %>% mutate(classe.nova = factor(ifelse(classe == "E1",expression(E_1),classe)))
res2$mean.vals %>% mutate(classe.nova = factor(ifelse(classe == "E1","expression(E_1)",classe)))
expression(E[1])
expression('E'[1])
x = expression('E'[1])
x
?expression
as.character(expression('E'[1]))
ggplot(res2$mean.vals,aes(x = time, y = mean, group = classe,fill = classe,color = classe)) + facet_wrap(~classe,ncol = 3,scales="free_y") + geom_line() + geom_ribbon(aes(ymin = q2.5,ymax = q97.5,color = NULL),alpha = 0.3)+theme_bw() +theme(legend.position = "none",text = element_text(size=14))+scale_y_continuous(labels = scales::number_format(accuracy = 1))+labs(x ='Date',y = "Cases")+scale_color_viridis_d()+scale_fill_viridis_d()
res2$mean.vals <-  res2$mean.vals %>% mutate(classe.nova = factor(ifelse(classe == "E1","expression(E_1)",classe)))
ggplot(res2$mean.vals,aes(x = time, y = mean, group = classe,fill = classe,color = classe)) + facet_wrap(~classe.nova,ncol = 3,scales="free_y") + geom_line() + geom_ribbon(aes(ymin = q2.5,ymax = q97.5,color = NULL),alpha = 0.3)+theme_bw() +theme(legend.position = "none",text = element_text(size=14))+scale_y_continuous(labels = scales::number_format(accuracy = 1))+labs(x ='Date',y = "Cases")+scale_color_viridis_d()+scale_fill_viridis_d()
res2$mean.vals <-  res2$mean.vals %>% mutate(classe.nova = factor(ifelse(classe == "E1",expression(E[1]),classe)))
res2$mean.vals <-  res2$mean.vals %>% mutate(classe.nova = factor(ifelse(classe == "E1",!!expression('E'[1]),classe)))
res2$mean.vals <-  res2$mean.vals %>% mutate(classe.nova = factor(ifelse(classe == "E1",parse_expr(expression('E'[1])),classe)))
library(tidyverse)
library(rlang)
res2$mean.vals <-  res2$mean.vals %>% mutate(classe.nova = factor(ifelse(classe == "E1",parse_expr(expression('E'[1])),classe)))
res2$mean.vals <-  res2$mean.vals %>% mutate(classe.nova = factor(ifelse(classe == "E1",parse_expr(expression("E"[1])),classe)))
res2$mean.vals <-  res2$mean.vals %>% mutate(classe.nova = factor(ifelse(classe == "E1",parse(expression("E"[1])),classe)))
res2$mean.vals <-  res2$mean.vals %>% mutate(classe.nova = factor(ifelse(classe == "E1",parse_quosure(expression("E"[1])),classe)))
res2$mean.vals <-  res2$mean.vals %>% mutate(classe.nova = factor(ifelse(classe == "E1",parse_quo(expression("E"[1])),classe)))
res2$mean.vals <-  res2$mean.vals %>% mutate(classe.nova = factor(ifelse(classe == "E1",!!parse_quo(expression("E"[1])),classe)))
res2$mean.vals[,classe == "E1"] <- expression("E"[1])
res2$mean.vals[,'classe' == "E1"] <- expression("E"[1])
res2$mean.vals
res2$mean.vals['classe' == "E1","classe"] <- expression("E"[1])
res2$mean.vals
res2$mean.vals['classe' == "E1","classe"]
res2$mean.vals$classe <- unfactor(res2$mean.vals$classe)
res2$mean.vals$classe <- as.character(res2$mean.vals$classe)
res2$mean.vals['classe' == "E1","classe"]
res2$mean.vals['classe' == "E1",]
res2$mean.vals[,"classe"]
res2$mean.vals[,"classe" == "E1"]
res2$mean.vals[,"classe"]
res2$mean.vals$classe == "E1"
res2$mean.vals$classe[]
res2$mean.vals$classe[res2$mean.vals$classe == "E1"]
res2$mean.vals$classe[res2$mean.vals$classe == "E1"] <- expression("E"[1])
res2
res2 <- res
res2
res2 <- res$mean.vals
res2$classe <- as.character(res2$classe)
res2
res2 %>% mutate(classe.nova = ifelse(classe = "E1",expression("E"["1"]),NA))
res2 %>% mutate(classe.nova = ifelse(classe == "E1",expression("E"["1"]),NA))
res2$classe.nova = ifelse(classe == "E1",expression("E"["1"]),NA)
res2$classe.nova = ifelse(res2$classe == "E1",expression("E"["1"]),NA)
res2
res2 <- res$mean.vals
library(stringr)
str_extract(res2$classe,"1|2")
paste0(res2$classe,str_extract(res2$classe,"1|2"))
paste0('"',str_extract(res2$classe,"S|E|A|I|H|R|D"),'"')
res2$classe
paste0('"',str_extract(res2$classe,"C|S|E|A|I|H|R|D"),'"')
paste0('"',str_extract(res2$classe,"C|S|E|A|I|H|R|D"),'"',case_when(str_extract(res2$classe,"1|2") == "1" ~ "[1]",str_extract(res2$classe,"1|2") == "2" ~ "[2]",is.na(str_extract(res2$classe,"1|2")) ~ ""))
paste0(''',str_extract(res2$classe,"C|S|E|A|I|H|R|D"),''',case_when(str_extract(res2$classe,"1|2") == "1" ~ "[1]",str_extract(res2$classe,"1|2") == "2" ~ "[2]",is.na(str_extract(res2$classe,"1|2")) ~ ""))
paste0('"',str_extract(res2$classe,"C|S|E|A|I|H|R|D"),'"',case_when(str_extract(res2$classe,"1|2") == "1" ~ "[1]",str_extract(res2$classe,"1|2") == "2" ~ "[2]",is.na(str_extract(res2$classe,"1|2")) ~ ""))
res2$classe.nova <- paste0('"',str_extract(res2$classe,"C|S|E|A|I|H|R|D"),'"',case_when(str_extract(res2$classe,"1|2") == "1" ~ "[1]",str_extract(res2$classe,"1|2") == "2" ~ "[2]",is.na(str_extract(res2$classe,"1|2")) ~ ""))
res2
ggplot(res2$mean.vals,aes(x = time, y = mean, group = classe,fill = classe,color = classe)) + facet_wrap(~classe.nova,ncol = 3,scales="free_y") + geom_line() + geom_ribbon(aes(ymin = q2.5,ymax = q97.5,color = NULL),alpha = 0.3)+theme_bw() +theme(legend.position = "none",text = element_text(size=14))+scale_y_continuous(labels = scales::number_format(accuracy = 1))+labs(x ='Date',y = "Cases")+scale_color_viridis_d()+scale_fill_viridis_d()
ggplot(res2$mean.vals,aes(x = time, y = mean, group = classe.nova,fill = classe,color = classe)) + facet_wrap(~classe.nova,ncol = 3,scales="free_y") + geom_line() + geom_ribbon(aes(ymin = q2.5,ymax = q97.5,color = NULL),alpha = 0.3)+theme_bw() +theme(legend.position = "none",text = element_text(size=14))+scale_y_continuous(labels = scales::number_format(accuracy = 1))+labs(x ='Date',y = "Cases")+scale_color_viridis_d()+scale_fill_viridis_d()
ggplot(res2,aes(x = time, y = mean, group = classe,fill = classe,color = classe)) + facet_wrap(~classe.nova,ncol = 3,scales="free_y") + geom_line() + geom_ribbon(aes(ymin = q2.5,ymax = q97.5,color = NULL),alpha = 0.3)+theme_bw() +theme(legend.position = "none",text = element_text(size=14))+scale_y_continuous(labels = scales::number_format(accuracy = 1))+labs(x ='Date',y = "Cases")+scale_color_viridis_d()+scale_fill_viridis_d()
ggplot(res2,aes(x = time, y = mean, group = classe,fill = classe,color = classe)) + facet_wrap(~expression(classe.nova),ncol = 3,scales="free_y") + geom_line() + geom_ribbon(aes(ymin = q2.5,ymax = q97.5,color = NULL),alpha = 0.3)+theme_bw() +theme(legend.position = "none",text = element_text(size=14))+scale_y_continuous(labels = scales::number_format(accuracy = 1))+labs(x ='Date',y = "Cases")+scale_color_viridis_d()+scale_fill_viridis_d()
res2$classe.nova <- str_extract(res2$classe,"C|S|E|A|I|H|R|D")
res2$classe.index <- case_when(str_extract(res2$classe,"1|2") == "1" ~ "[1]",str_extract(res2$classe,"1|2") == "2" ~ "[2]",is.na(str_extract(res2$classe,"1|2")) ~ "")
res2
res2$classe.index <- str_extract(res2$classe,"1|2")
res2
ggplot(res2,aes(x = time, y = mean, group = classe,fill = classe,color = classe)) + facet_wrap(~classe,ncol = 3,scales="free_y",labeller = label_bquote((classe.nova) ^ .(classe.index))) + geom_line() + geom_ribbon(aes(ymin = q2.5,ymax = q97.5,color = NULL),alpha = 0.3)+theme_bw() +theme(legend.position = "none",text = element_text(size=14))+scale_y_continuous(labels = scales::number_format(accuracy = 1))+labs(x ='Date',y = "Cases")+scale_color_viridis_d()+scale_fill_viridis_d()
ggplot(res2,aes(x = time, y = mean, group = classe,fill = classe,color = classe)) + facet_wrap(~classe,ncol = 3,scales="free_y",labeller = label_bquote((classe.nova) ^ (classe.index))) + geom_line() + geom_ribbon(aes(ymin = q2.5,ymax = q97.5,color = NULL),alpha = 0.3)+theme_bw() +theme(legend.position = "none",text = element_text(size=14))+scale_y_continuous(labels = scales::number_format(accuracy = 1))+labs(x ='Date',y = "Cases")+scale_color_viridis_d()+scale_fill_viridis_d()
res2
ggplot(res2,aes(x = time, y = mean, group = classe,fill = classe,color = classe)) + facet_wrap(~classe,ncol = 3,scales="free_y",labeller = label_bquote(.(classe.nova) ^ (classe.index))) + geom_line() + geom_ribbon(aes(ymin = q2.5,ymax = q97.5,color = NULL),alpha = 0.3)+theme_bw() +theme(legend.position = "none",text = element_text(size=14))+scale_y_continuous(labels = scales::number_format(accuracy = 1))+labs(x ='Date',y = "Cases")+scale_color_viridis_d()+scale_fill_viridis_d()
ggplot(res2,aes(x = time, y = mean, group = classe,fill = classe,color = classe)) + facet_wrap(~classe.nova,ncol = 3,scales="free_y",labeller = label_bquote(.(classe.nova) ^ (1))) + geom_line() + geom_ribbon(aes(ymin = q2.5,ymax = q97.5,color = NULL),alpha = 0.3)+theme_bw() +theme(legend.position = "none",text = element_text(size=14))+scale_y_continuous(labels = scales::number_format(accuracy = 1))+labs(x ='Date',y = "Cases")+scale_color_viridis_d()+scale_fill_viridis_d()
ggplot(res2,aes(x = time, y = mean, group = classe,fill = classe,color = classe)) + facet_wrap(~classe.nova+classe.index,ncol = 3,scales="free_y",labeller = label_bquote(.(classe.nova) ^ .(classe.index))) + geom_line() + geom_ribbon(aes(ymin = q2.5,ymax = q97.5,color = NULL),alpha = 0.3)+theme_bw() +theme(legend.position = "none",text = element_text(size=14))+scale_y_continuous(labels = scales::number_format(accuracy = 1))+labs(x ='Date',y = "Cases")+scale_color_viridis_d()+scale_fill_viridis_d()
res2$classe.index[is.na(res2$classe.index)] <- ""
ggplot(res2,aes(x = time, y = mean, group = classe,fill = classe,color = classe)) + facet_wrap(~classe.nova+classe.index,ncol = 3,scales="free_y",labeller = label_bquote(.(classe.nova) ^ .(classe.index))) + geom_line() + geom_ribbon(aes(ymin = q2.5,ymax = q97.5,color = NULL),alpha = 0.3)+theme_bw() +theme(legend.position = "none",text = element_text(size=14))+scale_y_continuous(labels = scales::number_format(accuracy = 1))+labs(x ='Date',y = "Cases")+scale_color_viridis_d()+scale_fill_viridis_d()
ggplot(res2,aes(x = time, y = mean, group = classe,fill = classe,color = classe)) + facet_wrap(~classe.nova+classe.index,ncol = 3,scales="free_y",labeller = label_bquote(.(classe.nova)[.(classe.index)])) + geom_line() + geom_ribbon(aes(ymin = q2.5,ymax = q97.5,color = NULL),alpha = 0.3)+theme_bw() +theme(legend.position = "none",text = element_text(size=14))+scale_y_continuous(labels = scales::number_format(accuracy = 1))+labs(x ='Date',y = "Cases")+scale_color_viridis_d()+scale_fill_viridis_d()
Sys.setlocale("LC_TIME","en_US.utf8")
res2$classe.nova <- factor(res2$classe.nova,levels = c("S","E","A","I","H","R","D","C"))
ggplot(res2,aes(x = time, y = mean, group = classe,fill = classe,color = classe)) + facet_wrap(~classe.nova+classe.index,ncol = 3,scales="free_y",labeller = label_bquote(.(classe.nova)[.(classe.index)])) + geom_line() + geom_ribbon(aes(ymin = q2.5,ymax = q97.5,color = NULL),alpha = 0.3)+theme_bw() +theme(legend.position = "none",text = element_text(size=14))+scale_y_continuous(labels = scales::number_format(accuracy = 1))+labs(x ='Date',y = "Cases")+scale_color_viridis_d()+scale_fill_viridis_d()
ggplot(res2,aes(x = time, y = mean, group = classe,fill = classe,color = classe)) + facet_wrap(~classe.nova+classe.index,ncol = 3,scales="free_y",labeller = label_bquote(.(as.character(classe.nova))[.(classe.index)])) + geom_line() + geom_ribbon(aes(ymin = q2.5,ymax = q97.5,color = NULL),alpha = 0.3)+theme_bw() +theme(legend.position = "none",text = element_text(size=14))+scale_y_continuous(labels = scales::number_format(accuracy = 1))+labs(x ='Date',y = "Cases")+scale_color_viridis_d()+scale_fill_viridis_d()
res2
tail(res2)
max(res2$time)
res2$time
max(as.Date(res2$time))
